# SPDX-FileCopyrightText: 2025 Christian Winger <https://github.com/wingechr>
# SPDX-FileCopyrightText: 2025 Jonas Huber <https://github.com/jh-RLI>
# SPDX-FileCopyrightText: 2025 Martin Glauer <https://github.com/MGlauer> © Otto-von-Guericke-Universität Magdeburg
# SPDX-FileCopyrightText: 2025 Martin Glauer <https://github.com/MGlauer> © Otto-von-Guericke-Universität Magdeburg
#
# SPDX-License-Identifier: MIT

# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-03-23 16:16
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [("modelview", "0031_auto_20160317_1307")]

    operations = [
        migrations.AddField(
            model_name="energymodel",
            name="model_output",
            field=models.CharField(
                choices=[
                    (".csv", ".csv"),
                    (".py", ".py"),
                    ("text", "text"),
                    (".xls", ".xls"),
                    ("Other", "Other"),
                ],
                default="other",
                help_text="Of which file format are the output data?",
                max_length=5,
                null=True,
                verbose_name="Output data file format",
            ),
        ),
        migrations.AddField(
            model_name="energymodel",
            name="model_output_other_text",
            field=models.CharField(max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="additional_software",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    help_text="Which additional software is required to run the model?",
                    max_length=1000,
                ),
                default=list,
                null=True,
                size=None,
                verbose_name="Additional software",
            ),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="authors",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    help_text="Who are the authors? Where do / did they work, on which parts of the model, during which time period?",  # noqa
                    max_length=300,
                ),
                default=list,
                null=True,
                size=None,
                verbose_name="Author(s) (institution, working field, active time period)",  # noqa
            ),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="documentation_quality",
            field=models.CharField(
                choices=[
                    ("not available", "not available"),
                    ("expandable", "expandable"),
                    ("good", "good"),
                    ("excellent", "excellent"),
                ],
                default="expandable",
                help_text="How is the quality of the documentations?",
                max_length=1000,
                verbose_name="Documentation quality",
            ),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="external_optimizer",
            field=models.BooleanField(
                default=False,
                help_text="Which external optimizer can the model apply?",
                verbose_name="External optimizer",
            ),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="institutions",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    help_text="Which institutions develop(ed) the model?",
                    max_length=1000,
                ),
                default=list,
                null=True,
                size=None,
                verbose_name="Institution(s)",
            ),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="interal_data_processing_software",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    help_text="Which data processing software is required?",
                    max_length=1000,
                ),
                default=list,
                null=True,
                size=None,
                verbose_name="Internal data processing software",
            ),
        ),
        migrations.AlterField(
            model_name="basicfactsheet",
            name="modelling_software",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    help_text="What modelling software and which version is used?",
                    max_length=1000,
                ),
                default=list,
                null=True,
                size=None,
                verbose_name="Modelling software ",
            ),
        ),
        migrations.AlterField(
            model_name="energyframework",
            name="used",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=1000),
                default=list,
                null=True,
                size=None,
                verbose_name="Models using this framework",
            ),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="geographical_coverage",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=1000),
                default=list,
                help_text="What regions are covered? Please, list the regions covered by the model. Leave blank, if the model and data are not limited to a specific region. Example input: USA, Canada, Mexico",  # noqa
                null=True,
                size=None,
                verbose_name="Geographical coverage",
            ),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="integrated_models",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.TextField(),
                help_text="Which models are integrated in the model? Where are these models available?",  # noqa
                null=True,
                size=None,
                verbose_name="Integration of other models",
            ),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="integrating_models",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.TextField(),
                help_text="With which models has this model been integrated into (providing a link)? Where is the combined model available?",  # noqa
                null=True,
                size=None,
                verbose_name="Integration with other models",
            ),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="mathematical_objective_other_text",
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="model_input",
            field=models.CharField(
                choices=[
                    (".csv", ".csv"),
                    (".py", ".py"),
                    ("text", "text"),
                    (".xls", ".xls"),
                    ("Other", "Other"),
                ],
                default="other",
                help_text="Of which file format are the input data?",
                max_length=5,
                null=True,
                verbose_name="Input data file format",
            ),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="transfer_electricity_distribution",
            field=models.BooleanField(default=False, verbose_name="distribution"),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="transfer_electricity_transition",
            field=models.BooleanField(default=False, verbose_name="transition"),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="transfer_gas_distribution",
            field=models.BooleanField(default=False, verbose_name="distribution"),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="transfer_gas_transition",
            field=models.BooleanField(default=False, verbose_name="transition"),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="transfer_heat_distribution",
            field=models.BooleanField(default=False, verbose_name="distribution"),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="transfer_heat_transition",
            field=models.BooleanField(default=False, verbose_name="transition"),
        ),
        migrations.AlterField(
            model_name="energymodel",
            name="uncertainty_Other_text",
            field=models.CharField(max_length=200, null=True, verbose_name="Other"),
        ),
        migrations.AlterField(
            model_name="energyscenario",
            name="citation_doi",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=1000),
                null=True,
                size=None,
                verbose_name="Citation doi",
            ),
        ),
        migrations.AlterField(
            model_name="energyscenario",
            name="citation_reference",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=1000),
                null=True,
                size=None,
                verbose_name="Citation reference",
            ),
        ),
    ]
