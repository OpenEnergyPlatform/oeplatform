# Generated by Django 3.2.15 on 2022-09-08 20:23

from django.db import migrations, models, transaction

from api.actions import get_comment_table, set_table_metadata
from api.error import APIError

# from dataedit.models import Table
from dataedit.views import get_schema_whitelist


def migrate_metadata(apps, schema_editor):
    # Need this ti avoide migration error if database is created from scratch
    Table = apps.get_model("dataedit", "Table")
    schema_whitelist = get_schema_whitelist()
    with transaction.atomic():
        for table in Table.objects.all():
            if table.schema.name not in schema_whitelist:
                continue
            metadata = get_comment_table(table.schema.name, table.name)
            try:
                set_table_metadata(
                    schema=table.schema.name, table=table.name, metadata=metadata
                )
            except APIError:
                # TODO: i think we should ignore those and continue?
                pass


def migrate_metadata_rev(apps, schema_editor):
    """no reverse required"""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("dataedit", "0018_auto_20220607_1829"),
    ]

    operations = [
        migrations.AddField(
            model_name="table",
            name="oemetadata",
            field=models.JSONField(null=True),
        ),
        migrations.RunPython(migrate_metadata, migrate_metadata_rev),
    ]
