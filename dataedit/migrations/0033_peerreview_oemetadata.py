# SPDX-FileCopyrightText: 2024 Jonas Huber <jh-RLI> Â© Reiner Lemoine Institut
# SPDX-FileCopyrightText: oeplatform <https://github.com/OpenEnergyPlatform/oeplatform/>
# SPDX-License-Identifier: MIT

# Generated by Django 3.2.22 on 2024-03-20 14:10

from django.db import migrations, models, transaction


def populate_oemetadata(apps, schema_editor):
    PeerReview = apps.get_model("dataedit", "PeerReview")
    TableModel = apps.get_model("dataedit", "Table")
    with transaction.atomic():
        for review in PeerReview.objects.all():
            if not review.oemetadata or review.oemetadata == {}:
                # Logic to find a matching value from TableModel.
                table = TableModel.objects.filter(
                    schema__name=review.schema, name=review.table
                ).first()
                if table:
                    review.oemetadata = table.oemetadata
                    review.save()


def migrate_oemetadata_rev(apps, schema_editor):
    """no reverse required"""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("dataedit", "0032_alter_table_is_publish"),
    ]

    operations = [
        migrations.AddField(
            model_name="peerreview",
            name="oemetadata",
            field=models.JSONField(default=dict),
        ),
        migrations.RunPython(populate_oemetadata, migrate_oemetadata_rev),
    ]
