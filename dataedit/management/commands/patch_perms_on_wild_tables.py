from django.core.management.base import BaseCommand

from dataedit.models import Table
from login.models import UserPermission


class Command(BaseCommand):
    help = "Patch table owners and set admin permissions"

    def add_arguments(self, parser):
        parser.add_argument("user_id", type=int, help="The user ID to set as the owner")

    def handle(self, *args, **options):
        user_id = options["user_id"]
        table_names = [
            "edut_00",
            "edut_00_000",
            "edut_00_001",
            "edut_00_002",
            "edut_00_003",
            "edut_00_004",
            "edut_00_005",
            "edut_00_006",
            "edut_00_007",
            "edut_00_008",
            "edut_00_009",
            "edut_00_010",
            "edut_00_011",
            "edut_00_012",
            "edut_00_013",
            "edut_00_014",
            "edut_00_015",
            "edut_00_016",
            "edut_00_017",
            "edut_00_018",
            "edut_00_019",
            "edut_00_020",
            "edut_00_021",
            "edut_00_022",
            "edut_00_023",
            "edut_00_024",
            "edut_00_025",
            "edut_00_026",
            "edut_00_027",
            "edut_00_028",
            "edut_00_029",
            "edut_00_030",
            "edut_00_031",
            "edut_00_032",
            "edut_00_033",
            "edut_00_034",
            "edut_00_035",
            "edut_00_036",
            "edut_00_037",
            "edut_00_038",
            "edut_00_039",
            "edut_00_040",
            "edut_00_041",
            "edut_00_042",
            "edut_00_043",
            "edut_00_044",
            "edut_00_045",
            "edut_00_046",
            "edut_00_047",
            "edut_00_048",
            "edut_00_049",
            "edut_00_050",
            "edut_00_051",
            "edut_00_052",
            "edut_00_053",
            "edut_00_054",
            "edut_00_055",
            "edut_00_056",
            "edut_00_057",
            "edut_00_058",
            "edut_00_059",
            "edut_00_060",
            "edut_00_061",
            "edut_00_062",
            "edut_00_063",
            "edut_00_064",
            "edut_00_065",
            "edut_00_066",
            "edut_00_067",
            "edut_00_068",
            "edut_00_069",
            "edut_00_070",
            "edut_00_071",
            "edut_00_072",
            "edut_00_073",
            "edut_00_074",
            "edut_00_075",
            "edut_00_076",
            "edut_00_077",
            "edut_00_078",
            "edut_00_079",
            "edut_00_080",
            "edut_00_081",
            "edut_00_082",
            "edut_00_083",
            "edut_00_084",
            "edut_00_085",
            "edut_00_086",
            "edut_00_087",
            "edut_00_088",
            "edut_00_089",
            "edut_00_090",
            "edut_00_091",
            "edut_00_092",
            "edut_00_093",
            "edut_00_094",
            "edut_00_095",
            "edut_00_096",
            "edut_00_097",
            "edut_00_098",
            "edut_00_099",
            "edut_00_100",
            "edut_00_101",
            "edut_00_102",
            "edut_00_103",
            "edut_00_104",
            "edut_00_105",
            "edut_00_106",
            "edut_00_107",
            "edut_00_108",
            "edut_00_109",
            "edut_00_110",
            "edut_00_111",
            "edut_00_112",
            "edut_00_113",
            "edut_00_114",
            "edut_00_115",
            "edut_00_116",
            "edut_00_117",
            "edut_00_118",
            "edut_00_119",
            "edut_00_120",
            "edut_00_121",
            "edut_00_122",
            "edut_00_123",
            "edut_00_124",
            "edut_00_125",
            "edut_00_126",
            "edut_00_127",
            "edut_00_128",
            "edut_00_129",
            "edut_00_130",
            "edut_00_131",
            "edut_00_132",
            "edut_00_133",
            "edut_00_134",
            "edut_00_135",
            "edut_00_136",
            "edut_00_137",
            "edut_00_138",
            "edut_00_139",
            "edut_00_140",
            "edut_00_141",
            "edut_00_142",
            "edut_00_143",
            "edut_00_144",
            "edut_00_145",
            "edut_00_146",
            "edut_00_147",
            "edut_00_148",
            "edut_00_149",
            "edut_00_150",
            "edut_00_151",
            "edut_00_152",
            "edut_00_153",
            "edut_00_154",
            "edut_00_155",
            "edut_00_156",
            "edut_00_157",
            "edut_00_158",
            "edut_00_159",
            "edut_00_160",
            "edut_00_161",
            "edut_00_162",
            "edut_00_163",
            "edut_00_164",
            "edut_00_165",
            "edut_00_166",
            "edut_00_167",
            "edut_00_168",
            "edut_00_169",
            "edut_00_170",
            "edut_00_171",
            "edut_00_172",
            "edut_00_173",
            "edut_00_174",
            "edut_00_175",
            "edut_00_176",
            "edut_00_177",
            "edut_00_178",
            "edut_00_179",
            "edut_00_180",
            "edut_00_181",
            "edut_00_182",
            "edut_00_183",
            "edut_00_184",
        ]

        for table_name in table_names:
            try:
                table = Table.objects.get(name=table_name)
                UserPermission.objects.create(
                    level=12, holder_id=user_id, table_id=table.id
                )
                self.stdout.write(
                    self.style.SUCCESS(
                        f"Successfully added permission for table {table_name}"
                    )
                )
            except Table.DoesNotExist:
                self.stdout.write(
                    self.style.ERROR(f"Table {table_name} does not exist")
                )

        self.stdout.write(self.style.SUCCESS("Completed patching table owners"))
