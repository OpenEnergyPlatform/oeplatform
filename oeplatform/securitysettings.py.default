import os
from pathlib import Path

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Runs on localhost only
URL = '127.0.0.1'

# This token is the token the test user is identified with during API-tests
token_test_user = None

# Setting of your django database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get("OEP_DJANGO_NAME", "oep_django"),
	    'USER': os.environ.get("OEP_DJANGO_USER", "postgres"),
	    'PASSWORD': os.environ.get("OEP_DB_PW", "postgres"),
	    'HOST': os.environ.get("OEP_DJANGO_HOST", "localhost")
	}
}

DEFAULT_SCHEMA = 'sandbox'
PLAYGROUNDS = (DEFAULT_SCHEMA, 'test')

UNVERSIONED_SCHEMAS = ("model_draft", )

# This is unnecessary as long DEBUG is True
ALLOWED_HOSTS = [] if DEBUG else ['localhost']

TIME_OUT = 30
USER_CONNECTION_LIMIT = 4
ANON_CONNECTION_LIMIT = 40

# This database connection is used for the actual data interfaces (App: dataedit)
# This should not be linked with a potential user account of the OpenEnergyDatabase !!!
# Please refer to the step 2.2 of the README file
dbuser = os.environ.get("LOCAL_DB_USER", "postgres")
dbpasswd = os.environ.get("LOCAL_DB_PASSWORD", "postgres")
dbport = os.environ.get("LOCAL_DB_PORT", 5432)
dbhost = os.environ.get("LOCAL_DB_HOST", "localhost")
dbname = os.environ.get("LOCAL_DB_NAME", "oedb")


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

CONTACT_ADDRESSES = {
    'technical': ['tech@localhost'],
    'other': ['other@localhost']
}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'oep@localhost'
EMAIL_PORT = 25

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

ONTOLOGY_FOLDER = "ontologies"
ONTOLOGY_ROOT = Path(BASE_DIR, ONTOLOGY_FOLDER)

# Connect to RDF database like jenna https://jena.apache.org/
# In OEP this is used to store and read triple data on the OEKG
# For example scenario bundle data is stored there
RDF_DATABASES = {
    'knowledge': {
        'host': 'host',
        'port': 'port',
        'name': 'your_rdf_dataset'
    },
    "oeo_ext": {"host": "localhost", "port": "3030", "name": "oeo_ext"}
}

# The RDF database brings a server that provides a web api.
# This service is part of the internal network.
if RDF_DATABASES:
    OEKG_SPARQL_ENDPOINT_URL = f"http://{RDF_DATABASES['knowledge']['host']}:{RDF_DATABASES['knowledge']['port']}/{RDF_DATABASES['knowledge']['name']}/sparql"

# The ontop-vkg is used to translate sparql to sql queries
# https://ontop-vkg.org/guide/cli.html#ontop-endpoint
# This service is part of the internal network.
# It depends on a mapping that maps concepts to the relational data structure
# We use it to implement quantitative scenario comparison
USE_ONTOP = False
if USE_ONTOP:
    ONTOP_SPARQL_ENDPOINT_URL = "http://localhost:8080/sparql"

# The LOEP provides lookup (autocomplete search) functionality implemented
# using Apache Lucene.
# https://github.com/dbpedia/dbpedia-lookup/tree/legacy
# This service is part of the internal network.
# It can find classes from the OEO and return similar concepts based on
# the text an user inputs to a search field
USE_LOEP = False
if USE_LOEP:
    DBPEDIA_LOOKUP_SPARQL_ENDPOINT_URL = (
        "http://localhost:8082/lookup-application/api/search?query="
    )
else:
    DBPEDIA_LOOKUP_SPARQL_ENDPOINT_URL = ""


SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

CORS_ORIGIN_ALLOW_ALL = True

OEKG_SPARQL_ENDPOINT_URL = "http://localhost:3030/ds/sparql"

SOCIALACCOUNT_PROVIDERS = {
    "openid_connect": {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        "APPS": [{
            "provider_id": "",
            "name": "",
            "client_id": "",
            "secret": "",
            "VERIFIED_EMAIL": True,
            "EMAIL_AUTHENTICATION": True,
            "settings": {"server_url": ""},
        }]
    }
}
