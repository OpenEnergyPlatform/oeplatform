dist: trusty
sudo: false
language: python
cache: pip
services:
  - postgresql
addons:
  postgresql: 9.6
  apt:
    packages:
    - postgresql-9.6-postgis-2.3

env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
    - OEP_DJANGO_USER="postgres" OEP_DJANGO_PW="postgres" LOCAL_DB_USER="postgres" LOCAL_DB_PW="postgres"
  matrix:
    - TOXENV=check
    - TOXENV=docs
matrix:
  include:
    - python: '3.5'
      env:
        - TOXENV=py3
    - python: '3.6'
      env:
        - TOXENV=py3
before_install:
  - python --version
  - uname -a
  - lsb_release -a
  - sudo apt-get update
install:
  - pip install tox
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version

before_script:
  - psql -U postgres -c 'CREATE DATABASE test;'
  - psql -U postgres -c "CREATE EXTENSION postgis;" test
  - psql -U postgres -c "CREATE DATABASE oedb"
  - psql -U postgres -c "CREATE EXTENSION postgis;" oedb
  - psql -U postgres -c "CREATE DATABASE oep_django"
  - psql -U postgres -c "CREATE SCHEMA IF NOT EXISTS sandbox" oedb
  - psql -U postgres -c "CREATE SCHEMA IF NOT EXISTS _sandbox" oedb
  - pip install -r requirements.txt
  - cp oeplatform/securitysettings.py.default oeplatform/securitysettings.py
  - python manage.py makemigrations
  - python manage.py migrate
  - python manage.py alembic upgrade head
  - python manage.py shell -c "from login.models import myuser; u=myuser.objects.create_user(name='test',email='test@test.com',affiliation='');u.is_mail_verified=True;u.save()"
  - LOCAL_OEP_TOKEN=`python manage.py shell -c "from login.models import Token;print(Token.objects.filter(user__name='test').first().key)"`
  - python manage.py runserver 8000 &

script:
  - OEP_DJANGO_USER=$OEP_DJANGO_USER;OEP_DJANGO_PW=$OEP_DJANGO_PW;LOCAL_DB_USER=$LOCAL_DB_USER;LOCAL_DB_PW=$LOCAL_DB_PW;LOCAL_OEP_TOKEN=$LOCAL_OEP_TOKEN tox -v
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
notifications:
  email:
    on_success: never
    on_failure: always
